/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form.dialog.ugovor;

import components.TableModelUgovor;
import domen.Korisnik;
import domen.Stan;
import domen.Ugovor;
import java.awt.Frame;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;

/**
 *
 * @author Admin
 */
public class UgovorIzmeni extends javax.swing.JDialog {

    Ugovor ug;
    ArrayList<Ugovor> ugovori;
    /**
     * Creates new form UgovorIzmeni
     */
    public UgovorIzmeni(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        jTable1.setModel(new TableModelUgovor());
        btnIzmeniUgovor.setEnabled(false);
        popuniTabelu();
        popuniKorisnike();
        popuniStanove();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCena = new javax.swing.JTextField();
        cmbStan = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtIznosProvizije = new javax.swing.JTextField();
        cmbKorisnik = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnOtkazi = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtDaumSklapanja = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDatumOd = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNapomena = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        txtDatumDo = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnIzmeniUgovor = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtValuta = new javax.swing.JTextField();
        btnVidi = new javax.swing.JButton();
        btnPretrazi = new javax.swing.JButton();
        btnOsvezi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Forma za izmenu ugovora");

        jLabel5.setText("Cena");

        jLabel6.setText("Iznos provizije");

        jLabel7.setText("Napomena");

        jLabel8.setText("Stan");

        btnOtkazi.setText("Otkazi");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        jLabel9.setText("Korisnik");

        jLabel1.setText("Izmeni ugovor");

        txtDaumSklapanja.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy"))));

        jLabel2.setText("Datum sklapanja ugovora");

        txtDatumOd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy"))));

        txtNapomena.setColumns(20);
        txtNapomena.setRows(5);
        jScrollPane1.setViewportView(txtNapomena);

        jLabel3.setText("Datum vazenja od");

        txtDatumDo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy"))));

        jLabel4.setText("Datum vazenja do");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        btnIzmeniUgovor.setText("Sacuvaj izmenu");
        btnIzmeniUgovor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniUgovorActionPerformed(evt);
            }
        });

        jLabel10.setText("Valuta");

        btnVidi.setText("Pripremi za izmenu");
        btnVidi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVidiActionPerformed(evt);
            }
        });

        btnPretrazi.setText("Pretrazi po stanu");
        btnPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziActionPerformed(evt);
            }
        });

        btnOsvezi.setText("Osvezi tabelu");
        btnOsvezi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOsveziActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                            .addComponent(txtDatumOd, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDaumSklapanja, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtDatumDo, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                .addComponent(txtCena)
                                .addComponent(txtIznosProvizije)
                                .addComponent(txtValuta, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbStan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(cmbKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnOtkazi)
                                    .addGap(33, 33, 33)))))
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnIzmeniUgovor)
                        .addGap(18, 18, 18)
                        .addComponent(btnVidi)
                        .addGap(26, 26, 26)
                        .addComponent(btnPretrazi))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOsvezi)
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnOsvezi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtDaumSklapanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtDatumOd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtDatumDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtIznosProvizije, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtValuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbStan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cmbKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOtkazi)
                    .addComponent(btnIzmeniUgovor)
                    .addComponent(btnVidi)
                    .addComponent(btnPretrazi))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void btnIzmeniUgovorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniUgovorActionPerformed

        
        if(txtDaumSklapanja.getText().isEmpty() || txtDatumOd.getText().isEmpty() || txtDatumDo.getText().isEmpty() || 
                txtCena.getText().isEmpty() || txtIznosProvizije.getText().isEmpty() || txtValuta.getText().isEmpty() || 
                txtNapomena.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Sva polja moraju biti polunjena");
            return;
        }
        
          if(!samoSlova(txtValuta.getText())){
            JOptionPane.showMessageDialog(this, "Valuta moze biti napisana samo slovima");
            return;
        }
        
        if(!samoCifre(txtCena.getText()) || !samoCifre(txtIznosProvizije.getText())){
            JOptionPane.showMessageDialog(this, "Cena i iznos provizije mogu sadrzati samo cifre.");
            return;
        }
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        
        try {
            Date datumSklapanja = sdf.parse(txtDaumSklapanja.getText());
            Date datumOd = sdf.parse(txtDatumOd.getText());
            Date datumDo = sdf.parse(txtDatumDo.getText());
            
            if(datumSklapanja.after(datumOd) || datumSklapanja.after(datumDo) || datumOd.after(datumDo)){
                JOptionPane.showMessageDialog(this, "Greska. Datumi moraju biti hronoloski tacni");
                return;
            }
            
            double cena = Double.parseDouble(txtCena.getText());
            double iznosProvizije = Double.parseDouble(txtIznosProvizije.getText());
            String valuta=txtValuta.getText();
            String napomena = txtNapomena.getText();
            Stan stan = (Stan) cmbStan.getSelectedItem();
            Korisnik korisnik = (Korisnik) cmbKorisnik.getSelectedItem();
            
            if(cena<0 || iznosProvizije<0){
                JOptionPane.showMessageDialog(this, "Cena i iznos provizije ne mogu biti negativni.");
                return;
            }
            
            Ugovor u = new Ugovor(ug.getUgovorID(), datumSklapanja, datumOd, datumDo, cena, iznosProvizije, valuta, napomena, stan, korisnik);
            Object o = controller.Communication.getInstance().updateUgovor(u);
            if(!(boolean)o){
            
                JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti ugovor.");
            }else{
            
                JOptionPane.showMessageDialog(this, "Sistem je zapamtio ugovor.");
                TableModelUgovor tmu = (TableModelUgovor) jTable1.getModel();
                int sel = jTable1.getSelectedRow();
                tmu.updateKorisnika(sel, u);
            }
            
        } catch (ParseException ex) {
            Logger.getLogger(UgovorDodaj.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(UgovorIzmeni.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
    }//GEN-LAST:event_btnIzmeniUgovorActionPerformed

    private void btnVidiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVidiActionPerformed
        // TODO add your handling code here:
        btnIzmeniUgovor.setEnabled(true);
        int selectedRow = jTable1.getSelectedRow();
        if(selectedRow >= 0){
        
            JOptionPane.showMessageDialog(this, "Sistem je ucitao ugovor.");
            TableModelUgovor tmu = (TableModelUgovor) jTable1.getModel();
            Ugovor u = tmu.vratiUgovor(selectedRow);
            popuniFormu(u);
        }else{
        
            JOptionPane.showMessageDialog(this, "Sistem ne moze da ucita ugovor.");
        }
    }//GEN-LAST:event_btnVidiActionPerformed

    private void btnPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziActionPerformed
        // TODO add your handling code here:
        Stan stan = (Stan) cmbStan.getSelectedItem();
        ArrayList<Ugovor> ugNovo = new ArrayList<>();
        for (Ugovor ugovor : ugovori) {
            if(ugovor.getStan().getStanID()==stan.getStanID()){
            
                ugNovo.add(ugovor);
            }
        }
        if(ugNovo.isEmpty()){
        
            JOptionPane.showMessageDialog(this, "Sistem ne moze da nadje ugovore po zadatoj vrednosti.");
        }else{
        
            JOptionPane.showMessageDialog(this, "Sistem je nasao ugovore po zadatoj vrednosti.");
            TableModelUgovor tmu = (TableModelUgovor) jTable1.getModel();
         tmu.dodajListu(ugNovo);
        }
        
    }//GEN-LAST:event_btnPretraziActionPerformed

    private void btnOsveziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOsveziActionPerformed
        // TODO add your handling code here:
        popuniTabelu();
    }//GEN-LAST:event_btnOsveziActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UgovorIzmeni.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UgovorIzmeni.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UgovorIzmeni.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UgovorIzmeni.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UgovorIzmeni dialog = new UgovorIzmeni(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeniUgovor;
    private javax.swing.JButton btnOsvezi;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton btnPretrazi;
    private javax.swing.JButton btnVidi;
    private javax.swing.JComboBox cmbKorisnik;
    private javax.swing.JComboBox cmbStan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCena;
    private javax.swing.JFormattedTextField txtDatumDo;
    private javax.swing.JFormattedTextField txtDatumOd;
    private javax.swing.JFormattedTextField txtDaumSklapanja;
    private javax.swing.JTextField txtIznosProvizije;
    private javax.swing.JTextArea txtNapomena;
    private javax.swing.JTextField txtValuta;
    // End of variables declaration//GEN-END:variables

    private void popuniTabelu() {
        try {
            ugovori = controller.Communication.getInstance().getAllUgovor();
            TableModelUgovor tmu = (TableModelUgovor) jTable1.getModel();
            tmu.dodajListu(ugovori);
        } catch (IOException ex) {
            Logger.getLogger(UgovorIzmeni.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniFormu(Ugovor u) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        ug = u;
        txtDaumSklapanja.setText(sdf.format(u.getDatumSklapanja()));
        txtDatumOd.setText(sdf.format(u.getDatumOd()));
        txtDatumDo.setText(sdf.format(u.getDatumDo()));
        txtCena.setText(String.valueOf(u.getCena()));
        txtIznosProvizije.setText(String.valueOf(u.getIznosProvizije()));
        txtValuta.setText(u.getValuta());
        txtNapomena.setText(u.getNapomena());
        cmbStan.getModel().setSelectedItem(u.getStan());
        cmbKorisnik.getModel().setSelectedItem(u.getKorisnik());
        
        
    }

    private void popuniKorisnike() {
        try {
            ArrayList<Korisnik> korisnici = controller.Communication.getInstance().getAllKorisnik();
            cmbKorisnik.removeAllItems();
            for (Korisnik korisnik : korisnici) {
                cmbKorisnik.addItem(korisnik);
            }
        } catch (IOException ex) {
            Logger.getLogger(UgovorDodaj.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniStanove() {
        try {
            ArrayList<Stan> stanovi = controller.Communication.getInstance().getAllStanovi();
            cmbStan.removeAllItems();
            for (Stan stan : stanovi) {
                cmbStan.addItem(stan);
            }
        } catch (IOException ex) {
            Logger.getLogger(UgovorDodaj.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private boolean samoSlova(String text) {
        for(Character c : text.toCharArray()){
            if(!Character.isLetter(c)){
                return false;
            }
        }
    return true;
    }

    
    private boolean samoCifre(String text) {
        for(Character c : text.toCharArray()){
            if(!Character.isDigit(c)){
                return false;
            }
        }
    return true;
    }
}
