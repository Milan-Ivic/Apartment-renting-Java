/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form.dialog.ugovor;

import domen.Korisnik;
import domen.Stan;
import domen.Ugovor;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class UgovorDodaj extends javax.swing.JDialog {

    /**
     * Creates new form UgovorDodaj
     */
    public UgovorDodaj(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        txtUgovorID.setEditable(false);
        btnSacuvajUgovor.setEnabled(false);
        popuniKorisnike();
        popuniStanove();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtDaumSklapanja = new javax.swing.JFormattedTextField();
        txtDatumOd = new javax.swing.JFormattedTextField();
        txtDatumDo = new javax.swing.JFormattedTextField();
        txtCena = new javax.swing.JTextField();
        txtIznosProvizije = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNapomena = new javax.swing.JTextArea();
        cmbStan = new javax.swing.JComboBox();
        cmbKorisnik = new javax.swing.JComboBox();
        btnSacuvajUgovor = new javax.swing.JButton();
        btnOtkazi = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtValuta = new javax.swing.JTextField();
        btnKreiraj = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtUgovorID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Forma za kreiranje ugovors");

        jLabel1.setText("Kreiraj ugovor");

        jLabel2.setText("Datum sklapanja ugovora");

        jLabel3.setText("Datum vazenja od");

        jLabel4.setText("Datum vazenja do");

        jLabel5.setText("Cena");

        jLabel6.setText("Iznos provizije");

        jLabel7.setText("Napomena");

        jLabel8.setText("Stan");

        jLabel9.setText("Korisnik");

        txtDaumSklapanja.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy"))));

        txtDatumOd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy"))));

        txtDatumDo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy"))));

        txtNapomena.setColumns(20);
        txtNapomena.setRows(5);
        jScrollPane1.setViewportView(txtNapomena);

        btnSacuvajUgovor.setText("Sacuvaj ugovor");
        btnSacuvajUgovor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajUgovorActionPerformed(evt);
            }
        });

        btnOtkazi.setText("Otkazi");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        jLabel10.setText("Valuta");

        btnKreiraj.setText("Kreiraj");
        btnKreiraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajActionPerformed(evt);
            }
        });

        jLabel11.setText("UgovorID:");

        txtUgovorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUgovorIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(btnOtkazi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnKreiraj)
                .addGap(64, 64, 64)
                .addComponent(btnSacuvajUgovor)
                .addGap(33, 33, 33))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addComponent(txtDatumOd, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDaumSklapanja, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbStan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                            .addComponent(cmbKorisnik, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDatumDo, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(txtCena)
                            .addComponent(txtIznosProvizije)
                            .addComponent(txtValuta))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(txtUgovorID, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDaumSklapanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUgovorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDatumOd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDatumDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtIznosProvizije, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtValuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbStan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(cmbKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOtkazi)
                    .addComponent(btnSacuvajUgovor)
                    .addComponent(btnKreiraj))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSacuvajUgovorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajUgovorActionPerformed
        
        if(txtDaumSklapanja.getText().isEmpty() || txtDatumOd.getText().isEmpty() || txtDatumDo.getText().isEmpty() || 
                txtCena.getText().isEmpty() || txtIznosProvizije.getText().isEmpty() || txtValuta.getText().isEmpty() || 
                txtNapomena.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Sva polja moraju biti polunjena");
            return;
        }
        
        if(!samoSlova(txtValuta.getText())){
            JOptionPane.showMessageDialog(this, "Valuta moze biti napisana samo slovima");
            return;
        }
        
        if(!samoCifre(txtCena.getText()) || !samoCifre(txtIznosProvizije.getText())){
            JOptionPane.showMessageDialog(this, "Cena i iznos provizije mogu sadrzati samo cifre.");
            return;
        }
        
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        
        try {
            Date datumSklapanja = sdf.parse(txtDaumSklapanja.getText());
            Date datumOd = sdf.parse(txtDatumOd.getText());
            Date datumDo = sdf.parse(txtDatumDo.getText());
            
            if(datumSklapanja.after(datumOd) || datumSklapanja.after(datumDo) || datumOd.after(datumDo)){
                JOptionPane.showMessageDialog(this, "Greska. Datumi moraju biti hronoloski tacni");
                return;
            }
            ArrayList<Ugovor> ugovori = controller.Communication.getInstance().getAllUgovor();
            
            
            double cena = Double.parseDouble(txtCena.getText());
            double iznosProvizije = Double.parseDouble(txtIznosProvizije.getText());
            String valuta=txtValuta.getText();
            String napomena = txtNapomena.getText();
            Stan stan = (Stan) cmbStan.getSelectedItem();
            Korisnik korisnik = (Korisnik) cmbKorisnik.getSelectedItem();
            int ugovorID = Integer.parseInt(txtUgovorID.getText());
            for (Ugovor ugovor : ugovori) {
                
                if(ugovor.getStan().getStanID()== stan.getStanID()){
                if(datumOd.after(ugovor.getDatumOd()) && datumOd.before(ugovor.getDatumDo())){
                
                    JOptionPane.showMessageDialog(this, "Stan je vec iznajmljen za taj period.");
                    return;
                }else if(datumDo.after(ugovor.getDatumOd()) && datumDo.before(ugovor.getDatumDo())){
                
                    JOptionPane.showMessageDialog(this, "Stan je vec iznajmljen za taj period.");
                    return;
                }else if(datumOd.before(ugovor.getDatumOd())&& datumDo.after(ugovor.getDatumDo())){
                
                    JOptionPane.showMessageDialog(this, "Stan je vec iznajmljen za taj period.");
                    return;
                }
                }
            }
            
            if(cena<0 || iznosProvizije<0){
                JOptionPane.showMessageDialog(this, "Cena i iznos provizije ne mogu biti negativni.");
                return;
            }
            
            Ugovor u = new Ugovor(ugovorID, datumSklapanja, datumOd, datumDo, cena, iznosProvizije, valuta, napomena, stan, korisnik);
            Object o = controller.Communication.getInstance().updateUgovor(u);
            
            if(!(boolean)o){
            
                JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti ugovor.");
            }else{
            
                JOptionPane.showMessageDialog(this, "Sistem je zapamtio ugovor.");
            }
            
            
        } catch (ParseException ex) {
            Logger.getLogger(UgovorDodaj.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(UgovorDodaj.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_btnSacuvajUgovorActionPerformed

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void btnKreirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajActionPerformed
        try {
            // TODO add your handling code here:
            btnSacuvajUgovor.setEnabled(true);
            Ugovor ugovor = new Ugovor();
            ugovor.setCena(0);
            ugovor.setDatumDo(new Date());
            ugovor.setDatumOd(new Date());
            ugovor.setDatumSklapanja(new Date());
            ugovor.setIznosProvizije(0);
            
            Korisnik ko = new Korisnik();
            ko.setKorisnikID(1);
            ugovor.setKorisnik(ko);
            ugovor.setNapomena("");
            Stan sta = new Stan();
            sta.setStanID(3);
            ugovor.setStan(sta);
            ugovor.setValuta("");
            
            Ugovor u = controller.Communication.getInstance().createUgovor(ugovor);
            if(u ==null){
            
                JOptionPane.showMessageDialog(this, "Sistem ne može da kreira ugovor.");
            }else{
            
                JOptionPane.showMessageDialog(this, "Sistem je kreirao ugovor.");
                txtUgovorID.setText(String.valueOf(u.getUgovorID()));
            }
        } catch (IOException ex) {
            Logger.getLogger(UgovorDodaj.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnKreirajActionPerformed

    private void txtUgovorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUgovorIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUgovorIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UgovorDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UgovorDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UgovorDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UgovorDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UgovorDodaj dialog = new UgovorDodaj(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKreiraj;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton btnSacuvajUgovor;
    private javax.swing.JComboBox cmbKorisnik;
    private javax.swing.JComboBox cmbStan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCena;
    private javax.swing.JFormattedTextField txtDatumDo;
    private javax.swing.JFormattedTextField txtDatumOd;
    private javax.swing.JFormattedTextField txtDaumSklapanja;
    private javax.swing.JTextField txtIznosProvizije;
    private javax.swing.JTextArea txtNapomena;
    private javax.swing.JTextField txtUgovorID;
    private javax.swing.JTextField txtValuta;
    // End of variables declaration//GEN-END:variables

    private void popuniKorisnike() {
        try {
            ArrayList<Korisnik> korisnici = controller.Communication.getInstance().getAllKorisnik();
            cmbKorisnik.removeAllItems();
            for (Korisnik korisnik : korisnici) {
                cmbKorisnik.addItem(korisnik);
            }
        } catch (IOException ex) {
            Logger.getLogger(UgovorDodaj.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniStanove() {
         try {
            ArrayList<Stan> stanovi = controller.Communication.getInstance().getAllStanovi();
            cmbStan.removeAllItems();
            for (Stan stan : stanovi) {
                cmbStan.addItem(stan);
            }
        } catch (IOException ex) {
            Logger.getLogger(UgovorDodaj.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private boolean samoSlova(String text) {
        for(Character c : text.toCharArray()){
            if(!Character.isLetter(c)){
                return false;
            }
        }
    return true;
    }

    
    private boolean samoCifre(String text) {
        for(Character c : text.toCharArray()){
            if(!Character.isDigit(c)){
                return false;
            }
        }
    return true;
    }
}
