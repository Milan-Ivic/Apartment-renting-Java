/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form.dialog.stan;

import domen.Adresa;
import domen.Karakteristika;
import domen.KategorijaStana;
import domen.Stan;
import domen.TipGrejanja;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class StanDodaj extends javax.swing.JDialog {

    /**
     * Creates new form StanDodaj
     */
    public StanDodaj(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        btnSacuvaj.setEnabled(false);
        txtAdresaID.setEditable(false);
        txtStanID.setEditable(false);
        popuniKategorije();
        popuniTipGrejanja();
        popuniKarakteristike();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtStanID = new javax.swing.JTextField();
        txtKvadratura = new javax.swing.JTextField();
        txtCena = new javax.swing.JTextField();
        txtValuta = new javax.swing.JTextField();
        txtIme = new javax.swing.JTextField();
        txtPrezime = new javax.swing.JTextField();
        txtKontaktTelefon = new javax.swing.JTextField();
        txtBrojSpratovaZgrade = new javax.swing.JTextField();
        txtSprat = new javax.swing.JTextField();
        cmbKategorijaStana = new javax.swing.JComboBox();
        cmbTipGrejanja = new javax.swing.JComboBox();
        pnlAdresa = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtNazivUlice = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtBrojZgrade = new javax.swing.JTextField();
        txtOznalaStana = new javax.swing.JTextField();
        txtGrad = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtAdresaID = new javax.swing.JTextField();
        pnlKarakteristike = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        cmbSveKarakteristike = new javax.swing.JComboBox();
        btnOtkazi = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();
        btnKreiraj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Forma za dodavanje stana");

        jLabel1.setText("Dodaj stan");

        jLabel2.setText("StanID:");

        jLabel3.setText("Kvadratura:");

        jLabel4.setText("Cena:");

        jLabel5.setText("Valuta:");

        jLabel6.setText("Ime vlasnika:");

        jLabel7.setText("Prezime vlasnika:");

        jLabel8.setText("Kontakt telefon:");

        jLabel9.setText("Broj spratova zgrade:");

        jLabel10.setText("Sprat:");

        jLabel11.setText("Kategorija stana:");

        jLabel12.setText("Tip grejanja:");

        pnlAdresa.setBorder(javax.swing.BorderFactory.createTitledBorder("Adresa"));

        jLabel13.setText("Naziv ulice");

        jLabel14.setText("Broj zgrade");

        jLabel15.setText("Oznaka stana");

        jLabel16.setText("Grad");

        jLabel18.setText("AdresaID:");

        javax.swing.GroupLayout pnlAdresaLayout = new javax.swing.GroupLayout(pnlAdresa);
        pnlAdresa.setLayout(pnlAdresaLayout);
        pnlAdresaLayout.setHorizontalGroup(
            pnlAdresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdresaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAdresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlAdresaLayout.createSequentialGroup()
                        .addGroup(pnlAdresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAdresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNazivUlice, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                            .addComponent(txtBrojZgrade)))
                    .addGroup(pnlAdresaLayout.createSequentialGroup()
                        .addGroup(pnlAdresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAdresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtOznalaStana, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(txtGrad)
                            .addComponent(txtAdresaID))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlAdresaLayout.setVerticalGroup(
            pnlAdresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdresaLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnlAdresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtNazivUlice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAdresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtBrojZgrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAdresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtOznalaStana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAdresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtGrad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAdresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtAdresaID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pnlKarakteristike.setBorder(javax.swing.BorderFactory.createTitledBorder("Karakteristike"));

        jLabel17.setText("Naziv karakteristike");

        javax.swing.GroupLayout pnlKarakteristikeLayout = new javax.swing.GroupLayout(pnlKarakteristike);
        pnlKarakteristike.setLayout(pnlKarakteristikeLayout);
        pnlKarakteristikeLayout.setHorizontalGroup(
            pnlKarakteristikeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKarakteristikeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cmbSveKarakteristike, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        pnlKarakteristikeLayout.setVerticalGroup(
            pnlKarakteristikeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKarakteristikeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlKarakteristikeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(cmbSveKarakteristike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        btnOtkazi.setText("Otkazi");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        btnSacuvaj.setText("Sacuvaj");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        btnKreiraj.setText("Kreiraj");
        btnKreiraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(116, 116, 116)
                                .addComponent(txtStanID, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(106, 106, 106)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtValuta, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtKvadratura, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGap(65, 65, 65)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtKontaktTelefon)
                                                .addComponent(txtPrezime)
                                                .addComponent(txtBrojSpratovaZgrade)
                                                .addComponent(txtSprat)
                                                .addComponent(cmbKategorijaStana, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(cmbTipGrejanja, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(208, 208, 208)
                                        .addComponent(jLabel1)))
                                .addGap(75, 75, 75)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pnlKarakteristike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pnlAdresa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(btnOtkazi)
                        .addGap(29, 29, 29)
                        .addComponent(btnKreiraj)
                        .addGap(46, 46, 46)
                        .addComponent(btnSacuvaj)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtStanID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtKvadratura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtValuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3))
                    .addComponent(pnlAdresa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel12))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtKontaktTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtBrojSpratovaZgrade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtSprat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(pnlKarakteristike, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbKategorijaStana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addComponent(cmbTipGrejanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOtkazi)
                    .addComponent(btnSacuvaj)
                    .addComponent(btnKreiraj))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
       
        try {
            if(txtStanID.getText().isEmpty() || txtKvadratura.getText().isEmpty() || txtCena.getText().isEmpty() ||
                    txtValuta.getText().isEmpty() || txtIme.getText().isEmpty() || txtPrezime.getText().isEmpty()||
                    txtKontaktTelefon.getText().isEmpty() || txtBrojSpratovaZgrade.getText().isEmpty() ||
                    txtSprat.getText().isEmpty() || txtNazivUlice.getText().isEmpty() || txtBrojZgrade.getText().isEmpty() ||
                    txtOznalaStana.getText().isEmpty() ){
                JOptionPane.showMessageDialog(this, "Sva polja moraju biti popunjena");
                return;
            }
            
            if(!samoSlova(txtGrad.getText()) || !samoSlova(txtIme.getText()) || !samoSlova(txtPrezime.getText()) || 
                    !samoSlova(txtValuta.getText())){
                JOptionPane.showMessageDialog(this, "Grad, ime vlassnika, prezime vlasnika i valuta mogu sadrzati samo slova");
                return;
                
            }
            if(!samoCifre(txtBrojSpratovaZgrade.getText()) || !samoCifre(txtCena.getText()) || !samoCifre(txtKvadratura.getText()) 
                    || !samoCifre(txtSprat.getText())){
                JOptionPane.showMessageDialog(this, "Broj spratova, cena, kvadratura i sprat stana mogu sadrzati samo cifre");
                return;
            }
            
           
            int stanID = Integer.parseInt(txtStanID.getText());
            double kvadratura = Double.parseDouble(txtKvadratura.getText());
            double cena= Double.parseDouble(txtCena.getText());
            String valuta = txtValuta.getText();
            String imeVlasnika = txtIme.getText();
            String prezimeVlasnika = txtPrezime.getText();
            String kontaktTelefon = txtKontaktTelefon.getText();
            int brSpratovaZgrade = Integer.parseInt(txtBrojSpratovaZgrade.getText());
            int sprat = Integer.parseInt(txtSprat.getText());
            boolean status = false;
            KategorijaStana kategorijaStana = (KategorijaStana) cmbKategorijaStana.getSelectedItem();
            TipGrejanja tipGrejanja = (TipGrejanja) cmbTipGrejanja.getSelectedItem();
            Karakteristika karakteristika = (Karakteristika) cmbSveKarakteristike.getSelectedItem();
            
            
            if(brSpratovaZgrade<0 || cena<0 || kvadratura<0){
                JOptionPane.showMessageDialog(this, "Broj spratova, cena i kvadraturna ne mogu biti manji od 0.");
                return;
            }
            
            if(sprat>brSpratovaZgrade){
                JOptionPane.showMessageDialog(this, "Ne moze sprat stana biti veci od ukupnog broja spratova zgrade.");
                return;
            }
            
            Stan stan = new Stan(stanID, kvadratura, cena, valuta, imeVlasnika, prezimeVlasnika, kontaktTelefon, brSpratovaZgrade, sprat, status, kategorijaStana, tipGrejanja, karakteristika);
            
            
            String nazivUlice = txtNazivUlice.getText();
            int brojZgrade = Integer.parseInt(txtBrojZgrade.getText());
            String oznakaStana = txtOznalaStana.getText();
            String grad = txtGrad.getText();
            int adresaID;
            
            if(brojZgrade<0){
                JOptionPane.showMessageDialog(this, "Broj zgrade ne moze biti negativan.");
                return;
            }
            
            if(txtAdresaID.getText().isEmpty()){
            
                adresaID = -1;
            }else{
            
                adresaID = Integer.parseInt(txtAdresaID.getText());
            }
            Adresa a = new Adresa(adresaID, stan, nazivUlice, brojZgrade, oznakaStana, grad);
            ArrayList<Adresa> adr = new ArrayList<>();
            adr.add(a);
            stan.setAdrese(adr);
            
            Object uspesno = controller.Communication.getInstance().updateStan(stan);
            if(!(boolean)uspesno){
            
                JOptionPane.showMessageDialog(this, "Sistem nije zapamtio stan.");
            }else{
            
                JOptionPane.showMessageDialog(this, "Sistem je zapamtio stan.");
            }
        } catch (IOException ex) {
            Logger.getLogger(StanDodaj.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       
        
    }//GEN-LAST:event_btnSacuvajActionPerformed

    private void btnKreirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajActionPerformed
        try {
            // TODO add your handling code here:
            Stan stan = new Stan();
            stan.setBrSpratovaZgrade(0);
            stan.setCena(0);
            stan.setImeVlasnika("");
            Karakteristika karakt = new Karakteristika();
            karakt.setKarakteristikaID(1);
            
            stan.setKarakteristika(karakt);
            KategorijaStana ks = new KategorijaStana();
            ks.setKategorijaStanaID(1);
            stan.setKategorijaStana(ks);
            
            stan.setKontaktTelefon("");
            stan.setKvadratura(0);
            stan.setPrezimeVlasnika("");
            stan.setSprat(0);
            stan.setStatus(false);
            TipGrejanja tg = new TipGrejanja();
            tg.setTipGrejanjaID(1);
            
            stan.setTipGrejanja(tg);
            stan.setValuta("");
            Adresa adresa = new Adresa();
            adresa.setStan(stan);
            adresa.setBrojZgrade(0);
            adresa.setNazivUlice("");
            adresa.setOznakaStana("");
            
            ArrayList<Adresa> adr = new ArrayList<>();
            adr.add(adresa);
            stan.setAdrese(adr);
            
            Stan vracen = controller.Communication.getInstance().createStan(stan);
            if(vracen==null){
                
                JOptionPane.showMessageDialog(this, "Sistem ne moze da kreira stan.");
            }else{
            
                JOptionPane.showMessageDialog(this, "Sistem je uspesno kreirao stan.");
                btnSacuvaj.setEnabled(true);
                txtStanID.setText(String.valueOf(vracen.getStanID()));
                ArrayList<Adresa> adres = vracen.getAdrese();
                Adresa a = new Adresa();
                if(!adres.isEmpty()){
                a = adres.get(0);
                if(a != null){
                txtAdresaID.setText(String.valueOf(a.getAdresaID()));
                JOptionPane.showMessageDialog(this, "Sistem je kreirao adresu.");
                }
                }
                
            }
        } catch (IOException ex) {
            Logger.getLogger(StanDodaj.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnKreirajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StanDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StanDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StanDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StanDodaj.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                StanDodaj dialog = new StanDodaj(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKreiraj;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cmbKategorijaStana;
    private javax.swing.JComboBox cmbSveKarakteristike;
    private javax.swing.JComboBox cmbTipGrejanja;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel pnlAdresa;
    private javax.swing.JPanel pnlKarakteristike;
    private javax.swing.JTextField txtAdresaID;
    private javax.swing.JTextField txtBrojSpratovaZgrade;
    private javax.swing.JTextField txtBrojZgrade;
    private javax.swing.JTextField txtCena;
    private javax.swing.JTextField txtGrad;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtKontaktTelefon;
    private javax.swing.JTextField txtKvadratura;
    private javax.swing.JTextField txtNazivUlice;
    private javax.swing.JTextField txtOznalaStana;
    private javax.swing.JTextField txtPrezime;
    private javax.swing.JTextField txtSprat;
    private javax.swing.JTextField txtStanID;
    private javax.swing.JTextField txtValuta;
    // End of variables declaration//GEN-END:variables

    private void popuniKategorije() {
        try {
            ArrayList<KategorijaStana> kategorije = controller.Communication.getInstance().getAllKategorije();
            cmbKategorijaStana.removeAllItems();
            for (KategorijaStana kategorijaStana : kategorije) {
                cmbKategorijaStana.addItem(kategorijaStana);
            }
        } catch (IOException ex) {
            Logger.getLogger(StanDodaj.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniTipGrejanja() {
        try {
            ArrayList<TipGrejanja> tipovi = controller.Communication.getInstance().getAllTipGrejanja();
            cmbTipGrejanja.removeAllItems();
            for (TipGrejanja tg : tipovi) {
                cmbTipGrejanja.addItem(tg);
            }
        } catch (IOException ex) {
            Logger.getLogger(StanDodaj.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniKarakteristike() {
        try {
            ArrayList<Karakteristika> karakteristike = controller.Communication.getInstance().getAllKarakteristika();
            cmbSveKarakteristike.removeAllItems();
            for (Karakteristika kar : karakteristike) {
                cmbSveKarakteristike.addItem(kar);
            }
        } catch (IOException ex) {
            Logger.getLogger(StanDodaj.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    
    private boolean samoSlova(String text) {
        for(Character c : text.toCharArray()){
            if(!Character.isLetter(c)){
                return false;
            }
        }
    return true;
    }

    
    private boolean samoCifre(String text) {
        for(Character c : text.toCharArray()){
            if(!Character.isDigit(c)){
                return false;
            }
        }
    return true;
    }
    
}
