/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form.dialog.stan;

import components.TableModelStan;
import domen.Adresa;
import domen.Stan;
import form.GlavnaForma;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class StanPretrazi extends javax.swing.JDialog {

    ArrayList<Stan> stanovi;
    ArrayList<Adresa> adrese = new ArrayList<>();
    /**
     * Creates new form StanPretrazi
     */
    public StanPretrazi(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        tblStan.setModel(new TableModelStan());
        popuniTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCenaOd = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCenaDo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStan = new javax.swing.JTable();
        btnOtkazi = new javax.swing.JButton();
        btnPrikaziSve = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnIzmeniStan = new javax.swing.JButton();
        btnObrisiStan = new javax.swing.JButton();
        btnPrikaziDetaljno = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Forma za pretragu stana");

        jLabel1.setText("Pretraga stana");

        jLabel3.setText("Cena od");

        jLabel4.setText("Cena do");

        tblStan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblStan);

        btnOtkazi.setText("Otkazi");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        btnPrikaziSve.setText("Pretrazi sve stanove");
        btnPrikaziSve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrikaziSveActionPerformed(evt);
            }
        });

        jButton1.setText("Pretrazi po vrednosti");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnIzmeniStan.setText("Izmeni stan");
        btnIzmeniStan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniStanActionPerformed(evt);
            }
        });

        btnObrisiStan.setText("Obrisi stan");
        btnObrisiStan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiStanActionPerformed(evt);
            }
        });

        btnPrikaziDetaljno.setText("Prikazi detaljno");
        btnPrikaziDetaljno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrikaziDetaljnoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCenaOd, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(txtCenaDo)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(btnPrikaziDetaljno))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(btnOtkazi)))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnPrikaziSve)
                                .addGap(34, 34, 34)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(btnIzmeniStan)
                                .addGap(84, 84, 84)
                                .addComponent(btnObrisiStan))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCenaOd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCenaDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrikaziSve)
                    .addComponent(jButton1)
                    .addComponent(btnPrikaziDetaljno))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIzmeniStan)
                    .addComponent(btnObrisiStan)
                    .addComponent(btnOtkazi))
                .addContainerGap(152, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void btnPrikaziSveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrikaziSveActionPerformed
        // TODO add your handling code here:
        popuniTabelu();
    }//GEN-LAST:event_btnPrikaziSveActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(!samoCifre(txtCenaDo.getText()) || !samoCifre(txtCenaOd.getText())){
            JOptionPane.showMessageDialog(this, "'Cena Od' i 'Cena do' mogu sadrzati samo cifre");
            return;
        }
        
        ArrayList<Stan> st = new ArrayList<>();
        double cenaOd;
        double cenaDo;
        if(!txtCenaOd.getText().isEmpty() && !txtCenaDo.getText().isEmpty()){
        
            
            cenaOd = Double.parseDouble(txtCenaOd.getText());
            cenaDo = Double.parseDouble(txtCenaDo.getText());
            
            if(cenaOd<0 || cenaDo<0){
                JOptionPane.showMessageDialog(this, "Cene ne mogu biti manje od 0");
                return;
            }
            
            if(cenaOd>cenaDo){
                JOptionPane.showMessageDialog(this, "Ne moze 'Cena od' biti veca od 'Cena do'");
                return;
            }
            
            for (Stan stan : stanovi) {
                if(stan.getCena() >= cenaOd && stan.getCena() <= cenaDo){
                
                    st.add(stan);
                }
            }
            
            if(st.isEmpty()){
            
                JOptionPane.showMessageDialog(this, "Nema takvih stanova.");
            }else{
            
                TableModelStan mts = (TableModelStan) tblStan.getModel();
                mts.dodajListu(st);
                JOptionPane.showMessageDialog(this, "Sistem je nasao stanove po zadatoj vrednosti.");
            }
        }else if(txtCenaOd.getText().isEmpty() && txtCenaDo.getText().isEmpty()){
        
            JOptionPane.showMessageDialog(this, "Niste uneli ni jednu vrednost.");
        }else if(!txtCenaOd.getText().isEmpty() && txtCenaDo.getText().isEmpty()){
        
            cenaOd = Double.parseDouble(txtCenaOd.getText());
            
            if(cenaOd<0){
                JOptionPane.showMessageDialog(this, "'Cena od' ne moze biti manja od 0");
                return;
            }
            
            for (Stan stan : stanovi) {
                if(stan.getCena() >= cenaOd ){
                
                    st.add(stan);
                }
            }
            
            if(st.isEmpty()){
            
                JOptionPane.showMessageDialog(this, "Nema takvih stanova.");
            }else{
            
                TableModelStan mts = (TableModelStan) tblStan.getModel();
                mts.dodajListu(st);
                                JOptionPane.showMessageDialog(this, "Sistem je nasao stanove po zadatoj vrednosti.");
            }
        }else{
        cenaDo = Double.parseDouble(txtCenaDo.getText());
        
         
            if(cenaDo<0){
                JOptionPane.showMessageDialog(this, "'Cena do' ne moze biti manja od 0");
                return;
            }
            
        
            for (Stan stan : stanovi) {
                if(stan.getCena() <= cenaDo ){
                
                    st.add(stan);
                }
            }
            
            if(st.isEmpty()){
            
                JOptionPane.showMessageDialog(this, "Nema takvih stanova.");
            }else{
            
                TableModelStan mts = (TableModelStan) tblStan.getModel();
                mts.dodajListu(st);
                                JOptionPane.showMessageDialog(this, "Sistem je nasao stanove po zadatoj vrednosti.");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnPrikaziDetaljnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrikaziDetaljnoActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblStan.getSelectedRow();
        if(selectedRow >= 0){
        
            TableModelStan tms = (TableModelStan) tblStan.getModel();
            Stan sta = tms.vratiStan(selectedRow);
            ArrayList<Adresa> adreseZaStan = new ArrayList<>();
            if(adrese !=null){
            for (Adresa adresa : adrese) {
                if(adresa.getStan().getStanID()==sta.getStanID()){
                
                    adreseZaStan.add(adresa);
                }
            }
            }
            sta.setAdrese(adreseZaStan);
            GlavnaForma gf = (GlavnaForma) getParent();
            StanIzmena si = new StanIzmena(gf, false);
            si.postaviFormu(sta);
            si.setVisible(true);
                            JOptionPane.showMessageDialog(this, "Sistem je ucitao stan.");
        }else{
        
            JOptionPane.showMessageDialog(this, "Sistem ne moze ucitati stan.");
        }
    }//GEN-LAST:event_btnPrikaziDetaljnoActionPerformed

    private void btnIzmeniStanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniStanActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblStan.getSelectedRow();
        if(selectedRow >= 0){
        
            TableModelStan tms = (TableModelStan) tblStan.getModel();
            Stan sta = tms.vratiStan(selectedRow);
            ArrayList<Adresa> adreseZaStan = new ArrayList<>();
            if(adrese !=null){
            for (Adresa adresa : adrese) {
                if(adresa.getStan().getStanID()==sta.getStanID()){
                
                    adreseZaStan.add(adresa);
                }
            }
            }
            sta.setAdrese(adreseZaStan);
            GlavnaForma gf = (GlavnaForma) getParent();
            StanIzmena si = new StanIzmena(gf, false);
            si.zaIzmenu(sta);
            si.setVisible(true);
            TableModelStan mts = (TableModelStan) tblStan.getModel();
            mts.updateStan(selectedRow, sta);
        }else{
        
            JOptionPane.showMessageDialog(this, "Sistem ne moze ucitati stan.");
        }
    }//GEN-LAST:event_btnIzmeniStanActionPerformed

    private void btnObrisiStanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiStanActionPerformed
        // TODO add your handling code here:
         int selectedRow = tblStan.getSelectedRow();
        if(selectedRow >= 0){
        
             try {
                 TableModelStan tms = (TableModelStan) tblStan.getModel();
                 Stan sta = tms.vratiStan(selectedRow);
                 ArrayList<Adresa> adreseZaStan = new ArrayList<>();
                 if(adrese !=null){
                     for (Adresa adresa : adrese) {
                         if(adresa.getStan().getStanID()==sta.getStanID()){
                             
                             adreseZaStan.add(adresa);
                         }
                     }
                 }
                 sta.setAdrese(adreseZaStan);
                 Object o = controller.Communication.getInstance().deleteStan(sta);
                 if(!(boolean)o){
                 
                     JOptionPane.showMessageDialog(this, "Sistem nije uspeo da obrise stan.");
                 }else{
                 
                     TableModelStan mts = (TableModelStan) tblStan.getModel();
                     mts.obrisiStan(selectedRow);
                     JOptionPane.showMessageDialog(this, "Sistem je ucitao stan.");
                     JOptionPane.showMessageDialog(this, "Sistem je obrisao stan.");
                 }
             } catch (IOException ex) {
                 Logger.getLogger(StanPretrazi.class.getName()).log(Level.SEVERE, null, ex);
             }
        }else{
        
            JOptionPane.showMessageDialog(this, "Sistem ne moze ucitati stan.");
        }
        
    }//GEN-LAST:event_btnObrisiStanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StanPretrazi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StanPretrazi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StanPretrazi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StanPretrazi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                StanPretrazi dialog = new StanPretrazi(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeniStan;
    private javax.swing.JButton btnObrisiStan;
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton btnPrikaziDetaljno;
    private javax.swing.JButton btnPrikaziSve;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblStan;
    private javax.swing.JTextField txtCenaDo;
    private javax.swing.JTextField txtCenaOd;
    // End of variables declaration//GEN-END:variables

    private void popuniTabelu()  {
        try {
            stanovi = controller.Communication.getInstance().getAllStanovi();
            adrese = controller.Communication.getInstance().getAllAdrese();
           
            TableModelStan tms = (TableModelStan) tblStan.getModel();
            tms.dodajListu(stanovi);
        } catch (IOException ex) {
            Logger.getLogger(StanPretrazi.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private boolean samoCifre(String text) {
        for(Character c : text.toCharArray()){
            if(!Character.isDigit(c)){
                return false;
            }
        }
    return true;
    }
}
